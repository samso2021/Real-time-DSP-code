******************************************************************************
              TMS320C55x Linker PC v4.3.8                      
******************************************************************************
>> Linked Sun May 06 15:35:48 2012

OUTPUT FILE NAME:   <randGenC.out>
ENTRY POINT SYMBOL: "reset_isr"  address: 000347a2


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
  MMR                   00000000   000000c0  00000000  000000c0  RW  
  DARAM                 000000c0   0000ff40  0000234a  0000dbf6  RW  
  SARAM                 00030000   0001e000  00004e7a  00019186  RW  
  EMIF_CS0              00050000   007b0000  00000000  007b0000  RW  
  EMIF_CS2              00800000   00400000  00000000  00400000  RW  
  EMIF_CS3              00c00000   00200000  00000000  00200000  RW  
  EMIF_CS4              00e00000   00100000  00000000  00100000  RW  
  EMIF_CS5              00f00000   000e0000  00000000  000e0000  RW  
  SAROM_0               00fe0000   00008000  00000000  00008000  R  X
  SAROM_1               00fe8000   00008000  00000000  00008000  R  X
  SAROM_2               00ff0000   00008000  00000000  00008000  R  X
  SAROM_3               00ff8000   00008000  00000000  00008000  R  X


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.bss         0   [ 000000c0 ]  00000060          *   00000587   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   00000300   randGenC.obj (.bss)
                 [ 000006c0 ]  00000360          *   00000119   rts55x.lib : defs.obj (.bss)
                 [ 000008f2 ]  00000479          *   000000d0              : trgdrv.obj (.bss)
                 [ 00000a92 ]  00000549          *   00000001   myC55xUtil.lib : i2s.obj (.bss)
                 [ 00000a94 ]  0000054a          *   00000071   rts55x.lib : lowlev.obj (.bss)
                 [ 00000b76 ]  000005bb          *   00000001              : fopen.obj (.bss)
                 [ 00000b78 ]  000005bc          *   00000016   myC55xUtil.lib : dma.obj (.bss)
                 [ 00000ba4 ]  000005d2          *   00000006   rts55x.lib : memory.obj (.bss)
                 [ 00000bb0 ]  000005d8          *   00000004              : _lock.obj (.bss)
                 [ 00000bb8 ]  000005dc          *   00000004              : exit.obj (.bss)
                 [ 00000bc0 ]  000005e0          *   00000003   myC55xUtil.lib : AIC3204_init.obj (.bss)
                 [ 00000bc6 ]  000005e3          *   00000001   --HOLE--
                 [ 00000bc8 ]  000005e4          *   00000003   rand.obj (.bss)

.data        0   [ 000000c0 ]  00000060          *   00000000   UNINITIALIZED

.sysmem      0   [ 00000bce ]  000005e7          *   000003e8   UNINITIALIZED
                 [ 00000bce ]  000005e7          *   000003e8   --HOLE--

.stack       0   [ 000013a0 ]  000009d0          *   000001f4   UNINITIALIZED
                 [ 000013a0 ]  000009d0          *   000001f4   --HOLE--

.sysstack 
*            0   [ 00001788 ]  00000bc4          *   000001f4   UNINITIALIZED
                 [ 00001788 ]  00000bc4          *   000001f4   --HOLE--

.const       0   [ 00001b70 ]  00000db8          *   0000019e   
                 [ 00001b70 ]  00000db8          *   00000101   rts55x.lib : ctype.obj (.const:__ctypes_)
                 [ 00001d72 ]  00000eb9          *   00000001   --HOLE-- [fill = 0]
                 [ 00001d74 ]  00000eba          *   0000005c   randGenC.obj (.const:.string)
                 [ 00001e2c ]  00000f16          *   00000024   rts55x.lib : _printfi.obj (.const:.string)
                 [ 00001e74 ]  00000f3a          *   0000000c              : _printfi.obj (.const)
                 [ 00001e8c ]  00000f46          *   00000008              : divd.obj (.const:_initial_approx$1)
                 [ 00001e9c ]  00000f4e          *   00000002              : fputs.obj (.const:.string)
                 [ 00001ea0 ]  00000f50          *   00000002   rand.obj (.const)
                 [ 00001ea4 ]  00000f52          *   00000002   rts55x.lib : divd.obj (.const)
                 [ 00001ea8 ]  00000f54          *   00000002              : fltlid.obj (.const)

.cio         0   [ 00001eb0 ]  00000f58          *   00000120   UNINITIALIZED
                 [ 00001eb0 ]  00000f58          *   00000120   rts55x.lib : trgmsg.obj (.cio)

.cinit       0   [ 000020f0 ]  00001078          *   00000090   
                 [ 000020f0 ]  00001078          *   0000002d   rts55x.lib : lowlev.obj (.cinit)
                 [ 0000214a ]  000010a5          *   0000002a              : defs.obj (.cinit)
                 [ 0000219e ]  000010cf          *   00000018   myC55xUtil.lib : dma.obj (.cinit)
                 [ 000021ce ]  000010e7          *   0000000a   rts55x.lib : _lock.obj (.cinit)
                 [ 000021e2 ]  000010f1          *   0000000a              : exit.obj (.cinit)
                 [ 000021f6 ]  000010fb          *   00000004   myC55xUtil.lib : i2s.obj (.cinit)
                 [ 000021fe ]  000010ff          *   00000004   rts55x.lib : fopen.obj (.cinit)
                 [ 00002206 ]  00001103          *   00000004              : memory.obj (.cinit)
                 [ 0000220e ]  00001107          *   00000001   --HOLE-- [fill = 0]

vector       0     00002300  [ 00001180 ] 00000100          *   
                   00002300  [ 00001180 ] 00000100          *   vector.obj (vector)

vectors      0     00002400  [ 00001200 ] 00000100          *   NOLOAD SECTION
                   00002400  [ 00001200 ] 00000100          *   rts55x.lib : vectors.obj (vectors)

.text        0     00030000  [ 00018000 ] 00004e7a          *   
                   00030000  [ 00018000 ] 00001598          *   rts55x.lib : _printfi.obj (.text)
                   00031598  [ 00018acc ] 00000543          *              : lowlev.obj (.text)
                   00031adb  [ 00018d6d+] 00000528          *              : trgdrv.obj (.text)
                   00032003  [ 00019001+] 000004b5          *              : memory.obj (.text)
                   000324b8  [ 0001925c ] 000004a3          *   myC55xUtil.lib : dma.obj (.text)
                   0003295b  [ 000194ad+] 0000036c          *   rts55x.lib : divd.obj (.text)
                   00032cc7  [ 00019663+] 0000032e          *   myC55xUtil.lib : AIC3204_init.obj (.text)
                   00032ff5  [ 000197fa+] 00000298          *                  : i2s_register.obj (.text)
                   0003328d  [ 00019946+] 0000027f          *   rts55x.lib : fopen.obj (.text)
                   0003350c  [ 00019a86 ] 0000025e          *              : llmpy.obj (.text)
                   0003376a  [ 00019bb5 ] 00000259          *              : addd.obj (.text)
                   000339c3  [ 00019ce1+] 00000245          *   randGenC.obj (.text)
                   00033c08  [ 00019e04 ] 000001ea          *   rts55x.lib : cmpd.obj (.text)
                   00033df2  [ 00019ef9 ] 00000163          *              : fputs.obj (.text)
                   00033f55  [ 00019faa+] 0000014c          *              : mpyd.obj (.text)
                   000340a1  [ 0001a050+] 000000e6          *              : setvbuf.obj (.text)
                   00034187  [ 0001a0c3+] 000000dd          *              : _io_perm.obj (.text)
                   00034264  [ 0001a132 ] 000000c8          *              : frcmpyd_div.obj (.text)
                   0003432c  [ 0001a196 ] 000000c2          *              : fflush.obj (.text)
                   000343ee  [ 0001a1f7 ] 000000bb          *   rand.obj (.text)
                   000344a9  [ 0001a254+] 000000ba          *   rts55x.lib : trgmsg.obj (.text:CIO_breakpoint)
                   00034563  [ 0001a2b1+] 000000a6          *              : fputc.obj (.text)
                   00034609  [ 0001a304+] 000000a1          *              : divul.obj (.text)
                   000346aa  [ 0001a355 ] 0000007d          *              : ltoa.obj (.text)
                   00034727  [ 0001a393+] 0000007b          *              : fclose.obj (.text)
                   000347a2  [ 0001a3d1 ] 00000079          *   vector.obj (.text)
                   0003481b  [ 0001a40d+] 00000076          *   rts55x.lib : frcmpyd.obj (.text)
                   00034891  [ 0001a448+] 00000072          *              : remul.obj (.text)
                   00034903  [ 0001a481+] 0000006f          *              : fixdli.obj (.text)
                   00034972  [ 0001a4b9 ] 0000006d          *              : trgmsg.obj (.text)
                   000349df  [ 0001a4ef+] 0000006b          *              : fseek.obj (.text)
                   00034a4a  [ 0001a525 ] 00000067          *              : fltlid.obj (.text)
                   00034ab1  [ 0001a558+] 0000005c          *              : atoi.obj (.text)
                   00034b0d  [ 0001a586+] 00000051          *   myC55xUtil.lib : i2s.obj (.text)
                   00034b5e  [ 0001a5af ] 00000050          *   rts55x.lib : printf.obj (.text)
                   00034bae  [ 0001a5d7 ] 0000004d          *              : autoinit.obj (.text)
                   00034bfb  [ 0001a5fd+] 0000004b          *              : args_main.obj (.text)
                   00034c46  [ 0001a623 ] 0000004b          *              : remli.obj (.text)
                   00034c91  [ 0001a648+] 00000048          *              : divli.obj (.text)
                   00034cd9  [ 0001a66c+] 0000003f          *              : memcpy.obj (.text)
                   00034d18  [ 0001a68c ] 0000003e          *              : exit.obj (.text)
                   00034d56  [ 0001a6ab ] 00000034          *              : boot.obj (.text)
                   00034d8a  [ 0001a6c5 ] 0000002a          *              : fixdi.obj (.text)
                   00034db4  [ 0001a6da ] 0000002a          *              : udiv.obj (.text)
                   00034dde  [ 0001a6ef ] 00000023          *              : memccpy.obj (.text)
                   00034e01  [ 0001a700+] 0000001c          *              : isinf.obj (.text)
                   00034e1d  [ 0001a70e+] 00000014          *              : subd.obj (.text)
                   00034e31  [ 0001a718+] 00000013          *              : lmpy.obj (.text)
                   00034e44  [ 0001a722 ] 00000012          *              : _lock.obj (.text)
                   00034e56  [ 0001a72b ] 00000010          *              : negd.obj (.text)
                   00034e66  [ 0001a733 ] 0000000a          *              : remove.obj (.text)
                   00034e70  [ 0001a738 ] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   00034e77  [ 0001a73b+] 00000002          *              : vectors.obj (.text)
                   00034e79  [ 0001a73c ] 00000001          *   --HOLE-- [fill = 20]


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
            00000060    .bss
            00000060    .data
00030000                .text
00034e71                C$$EXIT
0003455e                C$$IO$$
00034e31                I$$LMPY
00034db4                I$$UDIV
00034dc9                I$$UMOD
00032cc7                _AIC3204_init
            00000549    _Buf_Address
            000005cc    _CurrentRxL_DMAChannel
            000005cd    _CurrentRxR_DMAChannel
            000005ce    _CurrentTxL_DMAChannel
            000005cf    _CurrentTxR_DMAChannel
0003279d                _DMA_Isr
00031fa5                _HOSTclock
00031f3a                _HOSTclose
00031e85                _HOSTlseek
00031de6                _HOSTopen
00031d59                _HOSTread
00031cab                _HOSTrename
00031c4d                _HOSTtime
00031be3                _HOSTunlink
00031b56                _HOSTwrite
00002300                _RST
            000001e0    _RcvL1
            000002a0    _RcvL2
            00000240    _RcvR1
            00000300    _RcvR2
00002400                _Reset
            000005bc    _RxL1_DMA_address
            000005be    _RxL2_DMA_address
            000005c0    _RxR1_DMA_address
            000005c2    _RxR2_DMA_address
            000005c4    _TxL1_DMA_address
            000005c6    _TxL2_DMA_address
            000005c8    _TxR1_DMA_address
            000005ca    _TxR2_DMA_address
            00000060    _XmitL1
            00000120    _XmitL2
            000000c0    _XmitR1
            00000180    _XmitR2
            00000f58    __CIOBUF_
            00000bc4    __STACK_END
000003e8                __STACK_SIZE
000007d0                __SYSMEM_SIZE
000003e8                __SYSSTACK_SIZE
ffffffff                ___binit__
            00000060    ___bss__
ffffffff                ___c_args__
            00001078    ___cinit__
            00000060    ___data__
            00000060    ___edata__
            000005e7    ___end__
00034e7a                ___etext__
00034e01                ___isinf
ffffffff                ___pinit__
00030000                ___text__
0003376a                __addd
00034bfb                __args_main
000333ae                __cleanup
            000005dc    __cleanup_ptr
00033d9a                __cmpd
            00000db8    __ctypes_
0003297d                __divd
00034c91                __divli
00033735                __divlli
00034db4                __divu
00034609                __divul
00033641                __divull
0003432c                __doflush
            000005de    __dtors_ptr
00033d66                __eqld
00034d8a                __fixdi
00034903                __fixdli
00034a4a                __fltlid
0003481b                __frcmpyd
00034264                __frcmpyd_div
            00000478    __ft_end
            00000360    __ftable
00033d1c                __geqd
00033cd1                __gtrd
00033c84                __leqd
            000005d8    __lock
00033c3c                __lssd
00033f55                __mpyd
00034e31                __mpyli
00033589                __mpylli
00034e56                __negd
00033c08                __neqd
00034e54                __nop
00031356                __printfi
00034207                __rd_ok
00034e4c                __register_lock
00034e44                __register_unlock
00034c46                __remli
0003355a                __remlli
00034dc9                __remu
00034891                __remul
0003350c                __remull
            000009d0    __stack
00034e1d                __subd
            000005e7    __sys_memory
            00000bc4    __sysstack
            000003d8    __tmpnams
            000005da    __unlock
00034187                __wrt_ok
00034e70                _abort
000319eb                _add_device
00034ab1                _atoi
00034bae                _auto_init
00034d56                _c_int00
00032492                _calloc
0003248a                _chkheap
00031978                _close
00033255                _disable_i2s0
00033263                _disable_i2s1
00033271                _disable_i2s2
0003327f                _disable_i2s3
00032790                _enable_dma_int
0003321d                _enable_i2s0
0003322b                _enable_i2s1
00033239                _enable_i2s2
00033247                _enable_i2s3
00034d18                _exit
00034727                _fclose
00034395                _fflush
0003196f                _find_registered_device
000334d1                _fopen
00034563                _fputc
00033df2                _fputs
00032003                _free
00032434                _free_memory
00033408                _freopen
000349df                _fseek
00031adb                _getenv
00032ff5                _i2s0_read_CR
0003303d                _i2s0_read_INTR
00033043                _i2s0_read_INT_MASK
0003304f                _i2s0_read_RXL_LSW
0003305b                _i2s0_read_RXL_MSW
00033067                _i2s0_read_RXR_LSW
00033073                _i2s0_read_RXR_MSW
00033001                _i2s0_read_SRGR
0003300d                _i2s0_read_TXL_LSW
00033019                _i2s0_read_TXL_MSW
00033025                _i2s0_read_TXR_LSW
00033031                _i2s0_read_TXR_MSW
00032ffb                _i2s0_write_CR
00033049                _i2s0_write_INT_MASK
00033055                _i2s0_write_RXL_LSW
00033061                _i2s0_write_RXL_MSW
0003306d                _i2s0_write_RXR_LSW
00033079                _i2s0_write_RXR_MSW
00033007                _i2s0_write_SRGR
00033013                _i2s0_write_TXL_LSW
0003301f                _i2s0_write_TXL_MSW
0003302b                _i2s0_write_TXR_LSW
00033037                _i2s0_write_TXR_MSW
0003307f                _i2s1_read_CR
000330c7                _i2s1_read_INTR
000330cd                _i2s1_read_INT_MASK
000330d9                _i2s1_read_RXL_LSW
000330e5                _i2s1_read_RXL_MSW
000330f1                _i2s1_read_RXR_LSW
000330fd                _i2s1_read_RXR_MSW
0003308b                _i2s1_read_SRGR
00033097                _i2s1_read_TXL_LSW
000330a3                _i2s1_read_TXL_MSW
000330af                _i2s1_read_TXR_LSW
000330bb                _i2s1_read_TXR_MSW
00033085                _i2s1_write_CR
000330d3                _i2s1_write_INT_MASK
000330df                _i2s1_write_RXL_LSW
000330eb                _i2s1_write_RXL_MSW
000330f7                _i2s1_write_RXR_LSW
00033103                _i2s1_write_RXR_MSW
00033091                _i2s1_write_SRGR
0003309d                _i2s1_write_TXL_LSW
000330a9                _i2s1_write_TXL_MSW
000330b5                _i2s1_write_TXR_LSW
000330c1                _i2s1_write_TXR_MSW
00033109                _i2s2_read_CR
00033151                _i2s2_read_INTR
00033157                _i2s2_read_INT_MASK
00033163                _i2s2_read_RXL_LSW
0003316f                _i2s2_read_RXL_MSW
0003317b                _i2s2_read_RXR_LSW
00033187                _i2s2_read_RXR_MSW
00033115                _i2s2_read_SRGR
00033121                _i2s2_read_TXL_LSW
0003312d                _i2s2_read_TXL_MSW
00033139                _i2s2_read_TXR_LSW
00033145                _i2s2_read_TXR_MSW
0003310f                _i2s2_write_CR
0003315d                _i2s2_write_INT_MASK
00033169                _i2s2_write_RXL_LSW
00033175                _i2s2_write_RXL_MSW
00033181                _i2s2_write_RXR_LSW
0003318d                _i2s2_write_RXR_MSW
0003311b                _i2s2_write_SRGR
00033127                _i2s2_write_TXL_LSW
00033133                _i2s2_write_TXL_MSW
0003313f                _i2s2_write_TXR_LSW
0003314b                _i2s2_write_TXR_MSW
00033193                _i2s3_read_CR
000331db                _i2s3_read_INTR
000331e1                _i2s3_read_INT_MASK
000331ed                _i2s3_read_RXL_LSW
000331f9                _i2s3_read_RXL_MSW
00033205                _i2s3_read_RXR_LSW
00033211                _i2s3_read_RXR_MSW
0003319f                _i2s3_read_SRGR
000331ab                _i2s3_read_TXL_LSW
000331b7                _i2s3_read_TXL_MSW
000331c3                _i2s3_read_TXR_LSW
000331cf                _i2s3_read_TXR_MSW
00033199                _i2s3_write_CR
000331e7                _i2s3_write_INT_MASK
000331f3                _i2s3_write_RXL_LSW
000331ff                _i2s3_write_RXL_MSW
0003320b                _i2s3_write_RXR_LSW
00033217                _i2s3_write_RXR_MSW
000331a5                _i2s3_write_SRGR
000331b1                _i2s3_write_TXL_LSW
000331bd                _i2s3_write_TXL_MSW
000331c9                _i2s3_write_TXR_LSW
000331d5                _i2s3_write_TXR_MSW
000343ee                _initRand
            000005d0    _leftChannel
00033ab4                _leftChannel_process
00031909                _lseek
000346aa                _ltoa
000339c3                _main
00032134                _malloc
000323da                _max_free
00034dde                _memccpy
00034cd9                _memcpy
000320cf                _minit
0003184a                _open
00033b4a                _playAudio
00034b5e                _printf
00034563                _putc
000345fa                _putchar
00033f27                _puts
00034407                _randNumber1
00034467                _randNumber2
0003179c                _read
00034972                _readmsg
00032229                _realloc
00034e66                _remove
00031766                _remove_device
0003170d                _rename
            000005d1    _rightChannel
00033b1a                _rightChannel_process
000324b8                _setDMA_address
00032618                _set_dma0_ch0_i2s0_Lout
000325c0                _set_dma0_ch0_stop
00032676                _set_dma0_ch1_i2s0_Rout
000325d6                _set_dma0_ch1_stop
000326d4                _set_dma0_ch2_i2s0_Lin
000325ec                _set_dma0_ch2_stop
00032732                _set_dma0_ch3_i2s0_Rin
00032602                _set_dma0_ch3_stop
00034b0d                _set_i2s0_master
00034b3c                _set_i2s0_slave
000340a1                _setvbuf
000316da                _unlink
00031598                _write
000344a9                _writemsg
ffffffff                binit
            00001078    cinit
            00000060    edata
            000005e7    end
00034e7a                etext
ffffffff                pinit
000347a2                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
            00000060    .bss
            00000060    .data
            00000060    _XmitL1
            00000060    ___bss__
            00000060    ___data__
            00000060    ___edata__
            00000060    edata
            000000c0    _XmitR1
            00000120    _XmitL2
            00000180    _XmitR2
            000001e0    _RcvL1
000003e8                __STACK_SIZE
000003e8                __SYSSTACK_SIZE
            00000240    _RcvR1
            000002a0    _RcvL2
            00000300    _RcvR2
            00000360    __ftable
            000003d8    __tmpnams
000007d0                __SYSMEM_SIZE
            00000478    __ft_end
            00000549    _Buf_Address
            000005bc    _RxL1_DMA_address
            000005be    _RxL2_DMA_address
            000005c0    _RxR1_DMA_address
            000005c2    _RxR2_DMA_address
            000005c4    _TxL1_DMA_address
            000005c6    _TxL2_DMA_address
            000005c8    _TxR1_DMA_address
            000005ca    _TxR2_DMA_address
            000005cc    _CurrentRxL_DMAChannel
            000005cd    _CurrentRxR_DMAChannel
            000005ce    _CurrentTxL_DMAChannel
            000005cf    _CurrentTxR_DMAChannel
            000005d0    _leftChannel
            000005d1    _rightChannel
            000005d8    __lock
            000005da    __unlock
            000005dc    __cleanup_ptr
            000005de    __dtors_ptr
            000005e7    ___end__
            000005e7    __sys_memory
            000005e7    end
            000009d0    __stack
            00000bc4    __STACK_END
            00000bc4    __sysstack
            00000db8    __ctypes_
            00000f58    __CIOBUF_
            00001078    ___cinit__
            00001078    cinit
00002300                _RST
00002400                _Reset
00030000                .text
00030000                ___text__
00031356                __printfi
00031598                _write
000316da                _unlink
0003170d                _rename
00031766                _remove_device
0003179c                _read
0003184a                _open
00031909                _lseek
0003196f                _find_registered_device
00031978                _close
000319eb                _add_device
00031adb                _getenv
00031b56                _HOSTwrite
00031be3                _HOSTunlink
00031c4d                _HOSTtime
00031cab                _HOSTrename
00031d59                _HOSTread
00031de6                _HOSTopen
00031e85                _HOSTlseek
00031f3a                _HOSTclose
00031fa5                _HOSTclock
00032003                _free
000320cf                _minit
00032134                _malloc
00032229                _realloc
000323da                _max_free
00032434                _free_memory
0003248a                _chkheap
00032492                _calloc
000324b8                _setDMA_address
000325c0                _set_dma0_ch0_stop
000325d6                _set_dma0_ch1_stop
000325ec                _set_dma0_ch2_stop
00032602                _set_dma0_ch3_stop
00032618                _set_dma0_ch0_i2s0_Lout
00032676                _set_dma0_ch1_i2s0_Rout
000326d4                _set_dma0_ch2_i2s0_Lin
00032732                _set_dma0_ch3_i2s0_Rin
00032790                _enable_dma_int
0003279d                _DMA_Isr
0003297d                __divd
00032cc7                _AIC3204_init
00032ff5                _i2s0_read_CR
00032ffb                _i2s0_write_CR
00033001                _i2s0_read_SRGR
00033007                _i2s0_write_SRGR
0003300d                _i2s0_read_TXL_LSW
00033013                _i2s0_write_TXL_LSW
00033019                _i2s0_read_TXL_MSW
0003301f                _i2s0_write_TXL_MSW
00033025                _i2s0_read_TXR_LSW
0003302b                _i2s0_write_TXR_LSW
00033031                _i2s0_read_TXR_MSW
00033037                _i2s0_write_TXR_MSW
0003303d                _i2s0_read_INTR
00033043                _i2s0_read_INT_MASK
00033049                _i2s0_write_INT_MASK
0003304f                _i2s0_read_RXL_LSW
00033055                _i2s0_write_RXL_LSW
0003305b                _i2s0_read_RXL_MSW
00033061                _i2s0_write_RXL_MSW
00033067                _i2s0_read_RXR_LSW
0003306d                _i2s0_write_RXR_LSW
00033073                _i2s0_read_RXR_MSW
00033079                _i2s0_write_RXR_MSW
0003307f                _i2s1_read_CR
00033085                _i2s1_write_CR
0003308b                _i2s1_read_SRGR
00033091                _i2s1_write_SRGR
00033097                _i2s1_read_TXL_LSW
0003309d                _i2s1_write_TXL_LSW
000330a3                _i2s1_read_TXL_MSW
000330a9                _i2s1_write_TXL_MSW
000330af                _i2s1_read_TXR_LSW
000330b5                _i2s1_write_TXR_LSW
000330bb                _i2s1_read_TXR_MSW
000330c1                _i2s1_write_TXR_MSW
000330c7                _i2s1_read_INTR
000330cd                _i2s1_read_INT_MASK
000330d3                _i2s1_write_INT_MASK
000330d9                _i2s1_read_RXL_LSW
000330df                _i2s1_write_RXL_LSW
000330e5                _i2s1_read_RXL_MSW
000330eb                _i2s1_write_RXL_MSW
000330f1                _i2s1_read_RXR_LSW
000330f7                _i2s1_write_RXR_LSW
000330fd                _i2s1_read_RXR_MSW
00033103                _i2s1_write_RXR_MSW
00033109                _i2s2_read_CR
0003310f                _i2s2_write_CR
00033115                _i2s2_read_SRGR
0003311b                _i2s2_write_SRGR
00033121                _i2s2_read_TXL_LSW
00033127                _i2s2_write_TXL_LSW
0003312d                _i2s2_read_TXL_MSW
00033133                _i2s2_write_TXL_MSW
00033139                _i2s2_read_TXR_LSW
0003313f                _i2s2_write_TXR_LSW
00033145                _i2s2_read_TXR_MSW
0003314b                _i2s2_write_TXR_MSW
00033151                _i2s2_read_INTR
00033157                _i2s2_read_INT_MASK
0003315d                _i2s2_write_INT_MASK
00033163                _i2s2_read_RXL_LSW
00033169                _i2s2_write_RXL_LSW
0003316f                _i2s2_read_RXL_MSW
00033175                _i2s2_write_RXL_MSW
0003317b                _i2s2_read_RXR_LSW
00033181                _i2s2_write_RXR_LSW
00033187                _i2s2_read_RXR_MSW
0003318d                _i2s2_write_RXR_MSW
00033193                _i2s3_read_CR
00033199                _i2s3_write_CR
0003319f                _i2s3_read_SRGR
000331a5                _i2s3_write_SRGR
000331ab                _i2s3_read_TXL_LSW
000331b1                _i2s3_write_TXL_LSW
000331b7                _i2s3_read_TXL_MSW
000331bd                _i2s3_write_TXL_MSW
000331c3                _i2s3_read_TXR_LSW
000331c9                _i2s3_write_TXR_LSW
000331cf                _i2s3_read_TXR_MSW
000331d5                _i2s3_write_TXR_MSW
000331db                _i2s3_read_INTR
000331e1                _i2s3_read_INT_MASK
000331e7                _i2s3_write_INT_MASK
000331ed                _i2s3_read_RXL_LSW
000331f3                _i2s3_write_RXL_LSW
000331f9                _i2s3_read_RXL_MSW
000331ff                _i2s3_write_RXL_MSW
00033205                _i2s3_read_RXR_LSW
0003320b                _i2s3_write_RXR_LSW
00033211                _i2s3_read_RXR_MSW
00033217                _i2s3_write_RXR_MSW
0003321d                _enable_i2s0
0003322b                _enable_i2s1
00033239                _enable_i2s2
00033247                _enable_i2s3
00033255                _disable_i2s0
00033263                _disable_i2s1
00033271                _disable_i2s2
0003327f                _disable_i2s3
000333ae                __cleanup
00033408                _freopen
000334d1                _fopen
0003350c                __remull
0003355a                __remlli
00033589                __mpylli
00033641                __divull
00033735                __divlli
0003376a                __addd
000339c3                _main
00033ab4                _leftChannel_process
00033b1a                _rightChannel_process
00033b4a                _playAudio
00033c08                __neqd
00033c3c                __lssd
00033c84                __leqd
00033cd1                __gtrd
00033d1c                __geqd
00033d66                __eqld
00033d9a                __cmpd
00033df2                _fputs
00033f27                _puts
00033f55                __mpyd
000340a1                _setvbuf
00034187                __wrt_ok
00034207                __rd_ok
00034264                __frcmpyd_div
0003432c                __doflush
00034395                _fflush
000343ee                _initRand
00034407                _randNumber1
00034467                _randNumber2
000344a9                _writemsg
0003455e                C$$IO$$
00034563                _fputc
00034563                _putc
000345fa                _putchar
00034609                __divul
000346aa                _ltoa
00034727                _fclose
000347a2                reset_isr
0003481b                __frcmpyd
00034891                __remul
00034903                __fixdli
00034972                _readmsg
000349df                _fseek
00034a4a                __fltlid
00034ab1                _atoi
00034b0d                _set_i2s0_master
00034b3c                _set_i2s0_slave
00034b5e                _printf
00034bae                _auto_init
00034bfb                __args_main
00034c46                __remli
00034c91                __divli
00034cd9                _memcpy
00034d18                _exit
00034d56                _c_int00
00034d8a                __fixdi
00034db4                I$$UDIV
00034db4                __divu
00034dc9                I$$UMOD
00034dc9                __remu
00034dde                _memccpy
00034e01                ___isinf
00034e1d                __subd
00034e31                I$$LMPY
00034e31                __mpyli
00034e44                __register_unlock
00034e4c                __register_lock
00034e54                __nop
00034e56                __negd
00034e66                _remove
00034e70                _abort
00034e71                C$$EXIT
00034e7a                ___etext__
00034e7a                etext
ffffffff                ___binit__
ffffffff                ___c_args__
ffffffff                ___pinit__
ffffffff                binit
ffffffff                pinit

[280 symbols]
